steps:
  # Create .env file for backend with production settings
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cat > backend/.env << EOF
        ENV=production
        PROJECT_ID=$$PROJECT_ID
        LOCATION=us-central1
        LOG_LEVEL=INFO
        DB_USER=postgres
        DB_PASSWORD=$$DB_PASSWORD
        DB_NAME=kilokokua
        DB_HOST=$$DB_HOST
        CORS_ORIGINS=http://localhost:3000
        SECRET_KEY=$$SECRET_KEY
        EOF
    secretEnv: ['DB_PASSWORD', 'SECRET_KEY', 'DB_HOST']

  # Update frontend .env.production with API URL
  - name: 'bash'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        cat > chatbot/.env.production << EOF
        REACT_APP_API_URL=/api
        EOF

  # Build the combined image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/kilokokua-app', '.']

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kilokokua-app']

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'kilokokua-app'
      - '--image=gcr.io/$PROJECT_ID/kilokokua-app'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=ENV=production,PROJECT_ID=$PROJECT_ID,LOCATION=us-central1,DB_USER=postgres,DB_NAME=kilokokua,DB_HOST=${_DB_HOST},CORS_ORIGINS=http://localhost:3000'
      - '--set-secrets=DB_PASSWORD=db-password:latest,SECRET_KEY=jwt-secret:latest'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--min-instances=1'
      - '--max-instances=10'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/kilokokua-app'

timeout: 1800s

# Secret Manager configuration
# Note: Make sure to run the setup_gcp_secrets.sh script before deploying
# to create these secrets in Secret Manager
# Secrets must be created in us-central1 region to comply with organization policies
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/db-password/versions/latest
      env: 'DB_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/jwt-secret/versions/latest
      env: 'SECRET_KEY'
    - versionName: projects/$PROJECT_ID/secrets/db-host/versions/latest
      env: 'DB_HOST'
